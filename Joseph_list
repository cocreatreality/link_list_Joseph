class Child(object):
	"""every child object has four information property and two structer property 
	the type of name, idNumber, age, sex is string, while the type of preChild and reChild
	is a quto of Child object"""
	def __init__(self, name, idNumber, age, sex, preChild, reChild):
		self.name = name
		self.idNumber = idNumber
		self.age = age
		self.sex = sex
		self.preChild = preChild
		self.reChild = reChild

	def printInfo(outCount):
		print ("第" + outCount + "出局的是" + self.name + "\n")


class ChildrenLoop:
    def __init__(self):
        self.lenth = 0
        self.head = None
        self.tail = None
    def Insert(self, name, idNumber, age, sex):
        if self.head is None:
            head = Child(name, idNumber, age, sex, None, self.tail)
        elif self.tail is None:
            tail = Child(name, idNumber, age, sex, None, self.tail)
        else:
            node = Child(name, idNumber, age, sex, tail, head)
            tail.reChild = node
            tail = node
        self.lenth = self.lenth + 1
    def GetChild(self, idNumber):
        if self.lenth is 0:
            print ("The loop is empty! \n")
        node = self.head
        while node.idNumber is not idNumber:
            node = node.reChild
        return node
    def ShowChild(self, node):
        print("Name: " + node.name + "\t" + "idNumber" + node.idNumber + "\t" + "Age" + node.age + "\t" + "Sex" + node.sex + "\t\n")
    def Delete(self, node):
        self.PrintChild(node)
        prenode = node.preChild
        nextnode = node.reChild
        prenode.reChild = nextnode
        nextnode.preChild = prenode
    def startGame(self, idNumber, method, step):
        node = self.Getchild(idNumber)
        count = 1
        while self.lenth is not 1:
            print("第" + count + "个出列的同学是：\n")
            if method is 1:
                for i in range(step):
                    node = node.renode
                temp = node.renode
                self.Delete(node)
                node = temp
            else:
                for i in range(step):
                    node = node.prenode

                temp = node.prenode
                self.Delete(node)
                node = temp
            count = count + 1
        print ("剩下的同学是：\n")
        self.ShowChild(node)

def main():
        Joseph = ChildrenLoop()
        print("Please insert the information of children. \n")
        Joseph.Insert("Tom", "001", "15", "m")
        node = Joseph.GetChild("001")
        Joseph.ShowChild(node)
        return 0
